.range {
	width: 100%;
	min-width: 100px;
}

////////////////////////

.range {
	--primaryColor: #0366d6;
	--value-active-color: white;
	--value-background: transparent;
	--value-font: 600 calc(var(--thumb-size)) Galmuri11;
	--progress-color: #eee;
	--progress-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1) inset;
	--fill-color: var(--primaryColor);
	--track-height: calc(var(--thumb-size));
	--thumb-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
	--ticks-thickness: 1px;
	--ticks-height: 5px;
	--ticks-color: silver;
	--step: 1;
	--ticks-count: (var(--max) - var(--min)) / var(--step);
	--maxTicksAllowed: 30;
	--too-many-ticks: Min(1, Max(var(--ticks-count) - var(--maxTicksAllowed), 0));
	--x-step: Max(var(--step), var(--too-many-ticks) * (var(--max) - var(--min)));
	--tickInterval: 100/ ((var(--max) - var(--min)) / var(--step)) * var(--tickEvery, 1);
	--tickIntervalPerc: calc(
		(100% - var(--thumb-size)) / ((var(--max) - var(--min)) / var(--x-step)) * var(--tickEvery, 1)
	);
	--completed: calc((var(--value) - var(--min)) / (var(--max) - var(--min)) * 100);
	--LTR: 1;

	[dir="rtl"] & {
		--LTR: -1;
	}

	@mixin thumb {
		appearance: none;
		height: var(--thumb-size);
		width: var(--thumb-size);
		border-radius: 50%;
		background: var(--thumb-color, white);
		border: 1px solid silver;
		box-shadow: var(--inner-shadow, 0 0), var(--thumb-shadow);
	}

	display: inline-block;
	height: Max(var(--track-height), var(--thumb-size));
	background: linear-gradient(to right, var(--ticks-color) var(--ticks-thickness), transparent 1px) repeat-x;
	background-size: var(--tickIntervalPerc) var(--ticks-height);
	background-position: calc(var(--thumb-size) / 2) bottom;
	position: relative;
	z-index: 1;
	padding-bottom: var(--ticks-height);

	&[data-ticks-position="top"] {
		background-position: calc(var(--thumb-size) / 2) top;
		padding-bottom: 0;
		padding-top: var(--ticks-height);

		&::before,
		&::after {
			bottom: 0;
			top: -2.5ch;
		}

		> .range__progress {
			transform: none;
		}
	}

	// mix/max limits texts
	&::before,
	&::after {
		--offset: calc(var(--thumb-size) / 2);
		content: counter(x);
		font: var(--thumb-size) Galmuri11;
		position: absolute;
		text-align: center;
		bottom: -2.5ch;
		opacity: var(--min-max-opacity, 0.5);
		pointer-events: none;
	}

	&::before {
		counter-reset: x var(--min);
		left: var(--offset);
		transform: translateX(Calc(-50% * var(--LTR)));
		[dir="rtl"] & {
			left: auto;
			right: var(--offset);
		}
	}

	&::after {
		counter-reset: x var(--max);
		right: var(--offset);
		transform: translateX(Calc(50% * var(--LTR)));
		[dir="rtl"] & {
			right: auto;
			left: var(--offset);
		}
	}

	&__progress {
		position: absolute;
		left: 0;
		top: calc(50% - var(--ticks-height) / 2);
		transform: translateY(-50%) translateZ(0);
		width: 100%;
		height: calc(var(--track-height));
		pointer-events: none;
		z-index: -1;
		box-shadow: var(--progress-shadow);
		border-radius: 20px;
		background: var(--fill-color, white);

		&::after {
			content: "";
			display: block;
			margin-left: auto;
			margin-right: -1px;
			width: calc(100% - var(--completed) * 1%);
			height: 100%;
			background: var(--progress-color, #eee);
			box-shadow: inherit;
			border-radius: 0 20px 20px 0;

			[dir="rtl"] & {
				margin-right: auto;
				margin-left: -1px;
				border-radius: 20px 0 0 20px;
			}
		}
	}

	& > input {
		-webkit-appearance: none;
		width: 100%;
		height: var(--thumb-size);
		margin: 0;
		cursor: -webkit-grab;
		cursor: grab;
		outline: none;
		background: none;

		&::-webkit-slider-thumb {
			@include thumb;
		}
		&::-moz-slider-thumb {
			@include thumb;
		}
		&::-ms-thumb {
			@include thumb;
		}

		&:active {
			cursor: grabbing;
			--thumb-color: var(--fill-color);
			--inner-shadow: 0 0 0 calc(var(--thumb-size) / 4) inset white;
			+ output {
				transition: 0s;
			}
		}

		&:hover + output {
			--value-background: var(--primaryColor);
			color: var(--value-active-color);
			transform: translate(var(--x-offset), 0);
			box-shadow: 0 0 0 3px var(--value-background);
		}
	}

	& > output {
		--x-offset: calc(var(--completed) * -1% * var(--LTR));
		--pos: calc(((var(--value) - var(--min)) / (var(--max) - var(--min))) * 100%);

		pointer-events: none;
		position: absolute;
		z-index: 5;
		background: var(--value-background);
		border-radius: 10px;
		padding: 0 4px;
		top: -4ch;
		left: var(--pos);
		transform: translate(var(--x-offset), 6px);
		transition: all 0.12s ease-out, left 0s, top 0s;

		[dir="rtl"] & {
			left: auto;
			right: var(--pos);
		}

		&::after {
			content: var(--text-value);
			font: var(--value-font);
		}
	}
}
